/* Requires the Docker Pipeline plugin */

pipeline {
    // agent { docker { image 'golang:1.24.2-alpine3.21' } }
    agent none
    stages {
        // stage('Notify GitHub - Pending') {
        //     agent none // Don't run this in docker
        //     steps {
        //         script {
        //             githubNotify context: 'ci/jenkins', status: 'PENDING', description: 'Build started'
        //         }
        //     }
        // }

        stage('build') {
            steps {
                sh 'go version'

                retry(3) { sh 'go env' }
            }
        }

        stage('test') {
            steps {
                timeout(time: 3, unit: 'MINUTES') { sh 'pwd' }
            }
        }

    // stage('Notify GitHub - Success') {
    //     agent none
    //     steps {
    //         script {
    //             githubNotify context: 'ci/jenkins', status: 'SUCCESS', description: 'Build succeeded'
    //         }
    //     }
    // }
    }

    // post allows you to perform actions after the pipeline has completed.
    post {
        always {
            script {
                echo 'This will always run'
            }
        }
        success {
            script {
                echo 'This will only run on success'
            }
        }
        failure {
            script {
                echo 'This will only run on failure'
            }
        }
        unstable {
            script {
                echo 'This will only run if the build is unstable'
            }
        }
    }
}
