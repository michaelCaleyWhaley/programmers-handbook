/* Requires the Docker Pipeline plugin */

pipeline {
    agent { docker { image 'golang:1.24.2-alpine3.21' } }
    stages {
        stage('start pipeline notification') {
            steps {
                // Notify GitHub status: pending
                githubNotify context: 'build', status: 'PENDING', description: 'Build started'
            }
        }

        stage('build') {
            steps {
                sh 'go version'

                retry(3) { sh 'go env' }
            }
        }

        stage('test') {
            steps {
                timeout(time: 3, unit: 'MINUTES') { sh 'pwd' }
            }
        }
    }

    // post allows you to perform actions after the pipeline has completed.
    post {
        always {
            script {
                echo 'This will always run'
            }
        }
        success {
            script {
                script {
                    // Notify GitHub status: success
                    githubNotify context: 'build', status: 'SUCCESS', description: 'Build successful'
                }
                echo 'This will only run on success'
            }
        }
        failure {
            script {
                // Notify GitHub status: failure
                githubNotify context: 'build', status: 'FAILURE', description: 'Build failed'
                echo 'This will only run on failure'
            }
        }
        unstable {
            script {
                echo 'This will only run if the build is unstable'
            }
        }
    }
}
